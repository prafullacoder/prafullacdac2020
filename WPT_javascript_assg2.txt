Q2) Write a javascript function named reverse which takes a string argument and returns the
reversed string.


function reverse(str)
{
    var q="";
    for(var i=str.length-1 ; i>=0; i--)
    {
        q=q+str.charAt(i);
    }
    return q;
}
undefined
reverse("prafulla");
"allufarp"
//////////////////////////////////////////////////////////////////////

4)Write a Javascript program to sort elements of an array using sorting algorithm

function array()
{
    var arr1=[10,20,60,50,40,30];
        var temp3=0;
    for(var i=0 ; i<arr1.length-1 ; i++)
{
    
    for(var j=i+1 ; j<arr1.length ; j++)
    {
        if(arr[i]>arr[j])
        {
            temp3=arr1[i];
            arr1[i]=arr1[j];
            arr1[j]=temp3;
        }
    }
    
}
        return arr1;
}
OUTPUT:

array();
sorted array = [10, 20, 30, 40, 50, 60]
//////////////////////////////////////////////////////////////////////////////

5)Write a javascript function named length_of_array , which takes an array as argument and
returns the number of elements in that array (as opposed to what is given by the length
property of the array). Remember undefined can also be an element if it is explicitly set at some
index, e.g. x[5] = undefined; . This undefined should be counted, but elements which are not
present in the array (as arrays can be sparse), should not be counted.

var p=[10,20,3,40,50];

p[10]=80;
80
p
(11) [10, 20, 3, 40, 50, empty × 5, 80]
p.length
11

function array(arr)
{
    var count=0;
   for(var i=0 ; i<arr.length ; i++)
   {
        count++;
   }
    return count;
}

ANS
array(p);
length of array= 11
/////////////////////////////////////////////////////////////////////////
6)With suitable example explain OOL concepts in javascript like Inheritance, Constructor,
Encapsulation and Abstraction .


ANS)
	//first parent class
function School(schoolname,schoolgrade,totalstudents)
{
    this.schoolname=schoolname;
    this.schoolgrade=schoolgrade;
    this.totalstudents=totalstudents;
}

//function is created

School.prototype.studentcount=function()
{
    console.log("student count= "+this.totalstudents);
}

School.prototype.schoolinfo=function()
{
    console.log("schoolname= "+schoolname+" grade= "+schoolgrade);
}  

var sc1=new School("abc","B+",5000);

sc1.schoolname
"abc"
	
	//child class

function Student(schoolname,schoolgrade,totalstudents,studentname,rollno,percent,overallstatus)
{
    School.call(this,schoolname,schoolgrade,totalstudents);
    this.studentname=studentname;
    this.rollno=rollno;
    this.percent=percent;
    this.overallstatus=overallstatus;
};

Student.prototype=Object.create(School.prototype);
Student.prototype.constructor=Student;

var std3=new Student("pqr","A+",10000,"prabhanshu singh",063,"85%","very good");

std3.schoolinfo();
 schoolname= pqr grade= A+

std3.overallstatus
"very good"

std3.schoolgrade
"A+"

std3.schoolname
"pqr"

std3.studentcount();
 student count= 10000

console.log(std3 instanceof Student);
 true

console.log(sc1 instanceof School);
 true

console.log(sc1 instanceof Student);
 false

